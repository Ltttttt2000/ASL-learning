// Chef agent in restaurant system
// change to kitchen
/* Initial beliefs and rules */
//location(chef, frontdesk).
/* Initial goals */
!start.
/* Plans */
+!start: true <- .print("Kitchen is open!").



+cook(Customer, Menu, SeatNo)[source(Waiter)]: true <-
	.print("Received order: ", Menu, " from customer ", Customer, " on seat ", SeatNo, "Start cooking...");  // how to walk to the kitchen
//	.wait(1000);
	.send(Waiter, tell, rest).
//	.send(Waiter, tell, finish(Customer, Menu, SeatNo));
//	.print("Tell waiter!").

// trigger through environment
+cookdone(Customer): true <-
	?location(Customer, TableNumber);
	.print("finished cook for customer ", Customer," at table ", TableNumber);
	.send(waiter, tell, finish(Customer, TableNumber)).
//send: Waiter: same as the source; waiter2: the name of the waiter agent

+pickedup(Customer, TableNumber)[source(Waiter)]: true <-
	.send(Waiter, tell, deliever(Customer, TableNumber)).