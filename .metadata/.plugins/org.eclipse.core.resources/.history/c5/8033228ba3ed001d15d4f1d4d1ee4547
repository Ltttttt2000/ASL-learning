// Customer agent in restaurant system

/* Initial beliefs and rules */
// every customer should at the entrance first
location(tong, entrance).
location(c2, entrance).

/* Initial goals */

/* Plans */
+start: number(Number) <- .print("We have ", Number, " people, we are hungary....").


//+location(Agent, Location) : .my_name(Agent) <- .print("I am at ", Location).

// belief, goals defined in the mas2j
+!enter: number(Number) & time(Time) <-    //get the number of customers from initial belief
	.wait(Time);
	+location(Agent, Location);   // walk to the frontdesk
	walk(Location, frontdesk);
	.print("I'm hungry now... is there any space available?");
	.send(frontdesk, tell, welcome(Number)).  // tell frontdesk and get where to seat.
//	.broadcast(tell, welcome(Number)).   // to all waiters(only one) tell 可以用但是会告诉所有的waiter执行 askOne不能执行 askAll不能执行
	
	
// the customer sit down based on the TableNumber
+sitdown(TableNumber)[source(Frontdesk)]: true <-   
	?location(Agent, Location);
	.wait(2000);
	walk(Location, TableNumber);
	.print("Already sit down, start considering the order....").


+callwaiter(Agent, Count)[source(percept)]: .my_name(Agent)<-
	.print("I have prepared to order!");
	?location(Agent, Location);
	.send(waiter, tell, calling(Location, Count)).
	
// after considering the menu, input the food name through GUI and trigger the event.	
+startorder(Agent, Menu)[source(percept)]: .my_name(Agent) <-
	.print("I want to order ", Menu);
	?location(Agent, Location);
	.send(waiter, tell, receiveorder(Menu, Location)).  // get the number and TableNumber
	
	
+eat(Menu)[source(Waiter)]: true <- 
	.print("Delicious food! Thank you!");
	.send(Waiter, tell, back).


// trigger from GUI button
+pay(Agent, Count)[source(percept)]: .my_name(Agent)<-
	?location(Agent, Location);
	walk(Location, frontdesk);
	.print("finish the food, I want to pay");
	.send(frontdesk, tell, paybill(Location, Count)).

+bye[source(frontdesk)]: true <-
	.print("Thanks! Bye!");
	?location(Agent, Location);
	walk(Location, entrance).
