// Chef agent in restaurant system
// change to kitchen
/* Initial beliefs and rules */
//location(chef, frontdesk).
/* Initial goals */

/* Plans */

+start: not chefopen <- .print("Kitchen is open!"); +chefopen.

+cook(Menu, SeatNo)[source(Waiter)]: true <-
	.print("Received order: ", Menu, " from customer on seat ", SeatNo, "Start cooking...");  // how to walk to the kitchen
//	.send(Waiter, tell, back);  // send failure the second time??????
	.print("Send Successfully!").	
	
	
// trigger through environment
+cookdone(Customer, Count): true <-
	?location(Customer, TableNumber);
	.print("finished cook for customer ", Customer," at table ", TableNumber);
//	?location(waiter, Location);
//	.print(Location).
	.send(waiter, tell, finish(Customer, TableNumber, Count)).
//send: Waiter: same as the source; waiter2: the name of the waiter agent

+pickedup(Customer, TableNumber)[source(Waiter)]: true <-
	.print(Customer, TableNumber);
	.send(Waiter, tell, deliever(Customer, TableNumber)).